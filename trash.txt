   # def w1(b, c, example):
    #     return -2*(O-A)*softmax_derivative(z[example].dot(w2) + b2)*w1[b][c]*sigmoid_derivative(a[example].dot(w1) + b1)*w1[b][c]


    # def w2(b, c, example):
    #     return -2*(O-A)*softmax_derivative(z[example].dot(w2) + b2)*w2[b][c]


    # def b1(b, example):
    #     return -2*(O-A)*softmax_derivative(z[example].dot(w2) + b2)[b]*sigmoid_derivative(a[example].dot(w1[b]) + b1[b])


    # def b2(b, example):
    #     return -2*(O-A)*softmax_derivative(z[example].dot(w2) + b2)[b]
        

    # for k in range(epochs): # i is already taken :(
    #     for example in range(n):
    #         front_prop()
    #         w1_change = [[w1(i, j, example) for j in range(a_len)] for i in range(z_len)]
    #         w2_change = [[w2(i, j, example) for j in range(z_len)] for i in range(A_len)]
    #         b1_change = [b1[i, example] for i in range(z_len)]
    #         b2_change = [b2[i, example] for i in range(A_len)]

    #         w1 = np.subtract(w1, w1_change)
    #         w2 = np.subtract(w1, w2_change)
    #         b1 = np.subtract(w1, b1_change)
    #         b2 = np.subtract(w1, b2_change)